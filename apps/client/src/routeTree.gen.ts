/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth.index'
import { Route as AuthProfileImport } from './routes/_auth.profile'
import { Route as AuthBooksImport } from './routes/_auth.books'
import { Route as AuthBooksBookSlugImport } from './routes/_auth.books_.$bookSlug'
import { Route as AuthBooksBookSlugChaptersImport } from './routes/_auth.books_.$bookSlug_.chapters'
import { Route as AuthBooksBookSlugChaptersChapterImport } from './routes/_auth.books_.$bookSlug_.chapters_.$chapter'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBooksRoute = AuthBooksImport.update({
  path: '/books',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBooksBookSlugRoute = AuthBooksBookSlugImport.update({
  path: '/books/$bookSlug',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBooksBookSlugChaptersRoute = AuthBooksBookSlugChaptersImport.update({
  path: '/books/$bookSlug/chapters',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBooksBookSlugChaptersChapterRoute =
  AuthBooksBookSlugChaptersChapterImport.update({
    path: '/books/$bookSlug/chapters/$chapter',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_auth/books': {
      id: '/_auth/books'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof AuthBooksImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/books/$bookSlug': {
      id: '/_auth/books/$bookSlug'
      path: '/books/$bookSlug'
      fullPath: '/books/$bookSlug'
      preLoaderRoute: typeof AuthBooksBookSlugImport
      parentRoute: typeof AuthImport
    }
    '/_auth/books/$bookSlug/chapters': {
      id: '/_auth/books/$bookSlug/chapters'
      path: '/books/$bookSlug/chapters'
      fullPath: '/books/$bookSlug/chapters'
      preLoaderRoute: typeof AuthBooksBookSlugChaptersImport
      parentRoute: typeof AuthImport
    }
    '/_auth/books/$bookSlug/chapters/$chapter': {
      id: '/_auth/books/$bookSlug/chapters/$chapter'
      path: '/books/$bookSlug/chapters/$chapter'
      fullPath: '/books/$bookSlug/chapters/$chapter'
      preLoaderRoute: typeof AuthBooksBookSlugChaptersChapterImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthBooksRoute: typeof AuthBooksRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthBooksBookSlugRoute: typeof AuthBooksBookSlugRoute
  AuthBooksBookSlugChaptersRoute: typeof AuthBooksBookSlugChaptersRoute
  AuthBooksBookSlugChaptersChapterRoute: typeof AuthBooksBookSlugChaptersChapterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthBooksRoute: AuthBooksRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthBooksBookSlugRoute: AuthBooksBookSlugRoute,
  AuthBooksBookSlugChaptersRoute: AuthBooksBookSlugChaptersRoute,
  AuthBooksBookSlugChaptersChapterRoute: AuthBooksBookSlugChaptersChapterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/books': typeof AuthBooksRoute
  '/profile': typeof AuthProfileRoute
  '/': typeof AuthIndexRoute
  '/books/$bookSlug': typeof AuthBooksBookSlugRoute
  '/books/$bookSlug/chapters': typeof AuthBooksBookSlugChaptersRoute
  '/books/$bookSlug/chapters/$chapter': typeof AuthBooksBookSlugChaptersChapterRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/books': typeof AuthBooksRoute
  '/profile': typeof AuthProfileRoute
  '/': typeof AuthIndexRoute
  '/books/$bookSlug': typeof AuthBooksBookSlugRoute
  '/books/$bookSlug/chapters': typeof AuthBooksBookSlugChaptersRoute
  '/books/$bookSlug/chapters/$chapter': typeof AuthBooksBookSlugChaptersChapterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_auth/books': typeof AuthBooksRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/books/$bookSlug': typeof AuthBooksBookSlugRoute
  '/_auth/books/$bookSlug/chapters': typeof AuthBooksBookSlugChaptersRoute
  '/_auth/books/$bookSlug/chapters/$chapter': typeof AuthBooksBookSlugChaptersChapterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/books'
    | '/profile'
    | '/'
    | '/books/$bookSlug'
    | '/books/$bookSlug/chapters'
    | '/books/$bookSlug/chapters/$chapter'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/books'
    | '/profile'
    | '/'
    | '/books/$bookSlug'
    | '/books/$bookSlug/chapters'
    | '/books/$bookSlug/chapters/$chapter'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/register'
    | '/_auth/books'
    | '/_auth/profile'
    | '/_auth/'
    | '/_auth/books/$bookSlug'
    | '/_auth/books/$bookSlug/chapters'
    | '/_auth/books/$bookSlug/chapters/$chapter'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login",
        "/register"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/books",
        "/_auth/profile",
        "/_auth/",
        "/_auth/books/$bookSlug",
        "/_auth/books/$bookSlug/chapters",
        "/_auth/books/$bookSlug/chapters/$chapter"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_auth/books": {
      "filePath": "_auth.books.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile": {
      "filePath": "_auth.profile.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/books/$bookSlug": {
      "filePath": "_auth.books_.$bookSlug.tsx",
      "parent": "/_auth"
    },
    "/_auth/books/$bookSlug/chapters": {
      "filePath": "_auth.books_.$bookSlug_.chapters.tsx",
      "parent": "/_auth"
    },
    "/_auth/books/$bookSlug/chapters/$chapter": {
      "filePath": "_auth.books_.$bookSlug_.chapters_.$chapter.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
